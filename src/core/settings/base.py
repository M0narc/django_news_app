"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from pathlib import Path
from logging.handlers import TimedRotatingFileHandler

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&%*$t^o8+iyg(tcx0$vgp29*0_m*w+w0cls16y%fg)mkwfatk!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# borrar despues
ALLOWED_HOSTS = ['https://monarc.pythonanywhere.com/']

if DEBUG:
    ALLOWED_HOSTS += [
        "127.0.0.1",
        "localhost",
        "monarc.pythonanywhere.com"
    ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.user_auth',
    'apps.articulo',
    'apps.comentario',
    'apps.contacto',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTH_USER_MODEL = 'user_auth.CustomUser'


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-ar'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_BASE_DIR = BASE_DIR / "staticfiles"
STATICFILES_VENDOR_DIR = STATICFILES_BASE_DIR / "vendors" #FRANCO NO ME TOQUES EL SETTINGS CAPO

# source for python manage.py collectstatic
STATICFILES_DIRS =[
    STATICFILES_BASE_DIR
]

STATIC_ROOT = BASE_DIR.parent / "local-cdn"

# Media -> Imagenes, audios, videos que van surgiendo o creciendo a lo largo de la ejecución.
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Configuración para usar el servidor SMTP de Gmail
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'tecnoticiasinformatorio@gmail.com'
EMAIL_HOST_PASSWORD = 'lguy xzur qsvk krdc'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# login de usuarios
LOGIN_URL = "/auth/login"

# Verifica y crea el directorio de logs si no existe
log_directory = Path(BASE_DIR / 'logs')
if not log_directory.exists():
    log_directory.mkdir(parents=True, exist_ok=True)

# forma de formateo de nuestros logs para para ver en la consola
FORMATTERS = {
    "verbose": {
        "format": "{levelname} {asctime} {threadName} {thread:d} {module} {filename} {lineno:d} {name} {funcName} {process:d} {message}",
        "style": "{",
    },
    "simple": {
        "format": "{levelname} {asctime} {module} {filename} {lineno:d} {funcName} {message}",
        "style": "{",
    },
}

# manejo de datos y donde vamos a guardar los logs en detalle
HANDLERS = {
    "console_handler": {
        "class": "logging.StreamHandler",
        "formatter": "simple",
    },
    "file_handler": {
        "class": "logging.handlers.TimedRotatingFileHandler",
        "filename": str(log_directory / 'blogthedata.log'),
        "when": "midnight",  # Rota los archivos a medianoche
        "interval": 1,  # Cada 1 día
        "backupCount": 14,  # Mantiene logs por 14 días
        "encoding": "utf-8",
        "formatter": "simple",
    },
    "file_handler_detailed": {
        "class": "logging.handlers.TimedRotatingFileHandler",
        "filename": str(log_directory / 'blogthedata_detailed.log'),
        "when": "midnight",  # Rota los archivos a medianoche
        "interval": 1,  # Cada 1 día
        "backupCount": 14,  # Mantiene logs detallados por 14 días
        "encoding": "utf-8",
        "formatter": "verbose",
    },
}

# tipos de logs y su nivel de relevancia
LOGGERS = {
    "django": {
        "handlers": ["console_handler", "file_handler_detailed"],
        "level": "INFO",  # Puedes usar "DEBUG" en desarrollo si prefieres más detalle
        "propagate": False,
    },
    "django.request": {
        "handlers": ["file_handler"],
        "level": "WARNING",
        "propagate": False,
    },
    # Agrega un logger para tu aplicación
    "apps.user_auth": { 
        "handlers": ["console_handler", "file_handler_detailed"],
        "level": "DEBUG",
        "propagate": False,
    },
    "apps.articulo": {
        "handlers": ["console_handler", "file_handler_detailed"],
        "level": "DEBUG",
        "propagate": False,
    },
    "apps.comentario": {
        "handlers": ["console_handler", "file_handler_detailed"],
        "level": "DEBUG",
        "propagate": False,
    },
}

# aca metemos todo lo de arriba
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": FORMATTERS,
    "handlers": HANDLERS,
    "loggers": LOGGERS,
}